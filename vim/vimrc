set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" This is a VIM plugin package manager
Plugin 'VundleVim/Vundle.vim'

" Simpler way to use some motions in vim
Plugin 'easymotion/vim-easymotion'

" File browser tree. Like Navigator in Eclipse.
Plugin 'scrooloose/nerdtree'

" A pack of color schemes
Plugin 'daviddavis/vim-colorpack'

" Easily comment lines
"  
" <Leader>cc          Comment
" <Leader>c<Space>    Toggle comment
" <Leader>ci          Comments selected lines individually
" <Leader>cs          Comments sexily
Plugin 'scrooloose/nerdcommenter'

" Close a sinlge buffer without closing the window
Plugin 'Soares/butane.vim'

" Autocomplete functionality
Plugin 'ervandew/supertab'

" Fancy status bar
Plugin 'bling/vim-airline'

" Adds formatting tools
" Example: tabularize the selected text using '=' as a separator
" :Tabularize /=
Plugin 'godlygeek/tabular'

" Go to command
" let g:jedi#goto_command             = "<leader>d"
"
" Go to assignments
" let g:jedi#goto_assignments_command = "<leader>g"
"
" Go to deffinition
" let g:jedi#goto_definitions_command = ""
"
" Show docstring
" let g:jedi#documentation_command    = "K"
"
" Show usages
" let g:jedi#usages_command           = "<leader>n"
"
" Autocomplete
" let g:jedi#completions_command      = "<C-Space>"
"
" Rename
" let g:jedi#rename_command           = "<leader>r"
Plugin 'davidhalter/jedi-vim'

" Adds external support for linters.
Plugin 'syntastic'

" Adds some additional utilities and functionality for developing VIM
Plugin 'L9'

" Easy find files
Plugin 'FuzzyFinder'

" Adds tab view that is showing the methods and fields of the opened class. The same as Outline in Eclipse.
Plugin 'Tagbar'             

Plugin 'actionscript'

"<Leader>vv  - Grep for the word under the cursor, match all occurences, like |gstar|
"<Leader>vV  - Grep for the word under the cursor, match whole word, like |star|
"<Leader>va  - Like vv, but add to existing list
"<Leader>vA  - Like vV, but add to existing list
"<Leader>vr  - Perform a global search search on the word under the cursor and prompt for a pattern with which to replace it.
"<Leader>vo  - Select the files to search in and set grep options
Plugin 'vim-scripts/EasyGrep'

Plugin 'pangloss/vim-javascript'

Plugin 'othree/javascript-libraries-syntax.vim'

call vundle#end()
filetype plugin indent on

" ==================================
" ===     Configure behavior     ===
" ==================================

syntax on

set autoindent
set smartindent
set backup
set tabstop=3
set shiftwidth=3
set expandtab
set incsearch
set hlsearch
set cursorline
set number
set encoding=utf8
set wildchar=<Tab> wildmenu wildmode=full
set ignorecase
set ff=unix
set scrolloff=3
set noshowcmd
set hidden
set ruler
set laststatus=2
set undofile

nmap <silent> <Leader>ev :e $MYVIMRC<CR>
nmap <silent> <Leader>sv :so $MYVIMRC<CR>

nnoremap ; :

map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" ==================================
" ===     Configure VIM JS       ===
" ==================================
let g:javascript_enable_domhtmlcss=1
let g:javascript_enable_domhtmlcss = 1
let g:javascript_ignore_javaScriptdoc = 1

" ==================================
" Configure JS libs syntax highlight
" ==================================

autocmd BufReadPre *.js let b:javascript_lib_use_angularjs = 1
autocmd BufReadPre *.js let b:javascript_lib_use_requirejs = 1

" ==================================
" ===     Configure Jedi-VIM     ===
" ==================================

autocmd FileType python setlocal completeopt-=preview
autocmd BufEnter *.py set ai tw=79 sw=3 ts=3 sta et fo=croql 
autocmd BufEnter *.sc setlocal filetype=python

" ==================================
" ===     Configure Syntastic    ===
" ==================================

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_mode_map={ "mode": "passive" }
let g:sytastic_enable_highlighting=1
let g:syntastic_javascript_checkers = ['jshint']
nmap <leader>ll :SyntasticCheck<CR>
nmap <leader>ln :lnext<CR>
nmap <leader>lp :lprevious<CR>
nmap <leader>lr :SyntasticReset<CR>

" ==================================
" ===         EasyMotion         ===
" ==================================

map  <Leader>/ <Plug>(easymotion-sn)
omap <Leader>/ <Plug>(easymotion-tn)
"map  n <Plug>(easymotion-next)
"map  N <Plug>(easymotion-prev)
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)

let g:EasyMotion_startofline = 0 " keep cursor column when JK motion
let g:EasyMotion_smartcase = 1

" ==================================
" =  Configure AirLine status bar  =
" ==================================
let g:airline#extensions#tabline#enabled = 1

" ==================================
" ===      Set color scheme      ===
" ==================================

colo zmrok

" ==================================
" ===     Configure NERD tree    ===
" ==================================

nmap <silent> <Leader>0 :NERDTreeToggle<CR>

" ==================================
" ===       Configure TagBar     ===
" ==================================

nmap <silent> <Leader>9 :TagbarToggle<CR>

" ==================================
" ======    Configure Butane   =====
" ==================================

nmap qq :Bclose<CR>

" ==================================
" ===    Configure fuzzy find    ===
" ==================================

nmap <C-e> :FufBuffer<CR>
nmap <C-o> :FufFileWithCurrentBufferDir<CR>

" ==================================
" = Configure clipboard management =
" ==================================

" Copy to clipboard
vmap <Leader>c "+yy

" Cut to clipboard
vmap <Leader>x "+d

" Paste from clipboard
nmap <Leader>v "+p
vmap <Leader>v "+p
imap <Leader>v <ESC>"+pa

" ==================================
" ===      Window navigation     ===
" ==================================

nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" ==================================
" ===       Set key bindings     ===
" ==================================

" Clean the search results with ESC
map <Space> :noh<CR>

" Map jj to Esc
imap jj <Esc>

" Easier moving to start/end line
nnoremap <leader>a ^
nnoremap <leader>e $
vnoremap <leader>a ^
vnoremap <leader>e $<Left>

" Replace
nmap <C-r> :%s//g<Left><Left>
imap <C-r> <ESC><C-r>
vmap <C-r> :s//g<Left><Left>

" New line
imap <S-Enter> <Esc>o
imap <C-Enter> <Esc>O

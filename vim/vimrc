" ==================================
" ===          Plugins           ===
" ==================================

set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" This is a VIM plugin package manager
Plugin 'VundleVim/Vundle.vim'

" File browser tree. Like Navigator in Eclipse.
Plugin 'scrooloose/nerdtree'

" A pack of color schemes
Plugin 'daviddavis/vim-colorpack'

" Easily comment lines
Plugin 'scrooloose/nerdcommenter'

" Close a sinlge buffer without closing the window
Plugin 'Soares/butane.vim'

" Fancy status bar
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" Tabularize the selected text using '=' as a separator
Plugin 'godlygeek/tabular'

" Python IDE
Plugin 'davidhalter/jedi-vim'

" Adds external support for linters.
Plugin 'scrooloose/syntastic'

" Adds some additional utilities and functionality for developing VIM
Plugin 'L9'

" Adds tab view that is showing the methods and fields of the opened class. The same as Outline in Eclipse.
Plugin 'Tagbar'

" Support for ActionScript
Plugin 'actionscript'

" Integration with Grep and VimGrep
Plugin 'vim-scripts/EasyGrep'

" Support for JavaScript
Plugin 'pangloss/vim-javascript'

" Highlight some JavaScript libraries
Plugin 'othree/javascript-libraries-syntax.vim'

" Fuzzy file/buffer finder
Plugin 'ctrlpvim/ctrlp.vim'

" VIM utilities
Plugin 'MarcWeber/vim-addon-mw-utils'

" VIM utilities
Plugin 'tomtom/tlib_vim'

" A bunch of snippets (engine)
Plugin 'garbas/vim-snipmate'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" HTML5 support
Plugin 'othree/html5-syntax.vim'
Plugin 'othree/html5.vim'

" LESS support
Plugin 'groenewege/vim-less'

" Tern is a stand-alone code-analysis engine for JavaScript
Plugin 'ternjs/tern_for_vim'

" Highlight the matching tag
Plugin 'gregsexton/MatchTag'

" UNIX file modification operations
Plugin 'tpope/vim-eunuch'

" Support for typescript
Plugin 'leafgarland/typescript-vim'

" Update the CSS completion with latest standards
Plugin 'othree/csscomplete.vim'

" JSDOC support
Plugin 'heavenshell/vim-jsdoc'

" Manage marks
Plugin 'kshenoy/vim-signature'

" Surround actions
Plugin 'tpope/vim-surround'

" Enchances the search and replace capabilities
Plugin 'tpope/vim-abolish'

" Highlith XML/HTML opening or closing tag
Plugin 'jiangmiao/auto-pairs'

" Perforce integration plugin
Plugin 'nfvs/vim-perforce'

" Expand abreviations
Plugin 'mattn/emmet-vim'

Plugin 'jelera/vim-javascript-syntax'
Plugin 'nathanaelkane/vim-indent-guides'

" Git support - adds sign infront of the file line indication if the text was
" added/remove/edited
Plugin 'airblade/vim-gitgutter'

" Git support - commands
Plugin 'tpope/vim-fugitive'

" Add Git support in NERDTree
Plugin 'Xuyuanp/nerdtree-git-plugin'

" Support for GUI color schemes in the non-gui environments
Plugin 'godlygeek/csapprox'

" Enchances the VIM search
Plugin 'henrik/vim-indexed-search'

" Shows the VIM's undo tree (history)
Plugin 'mbbill/undotree'

" Corrects file path/name if wrong
Plugin 'EinfachToll/DidYouMean'

" Allows method parameters, array elements, etc. to be moved left or right
Plugin 'AndrewRadev/sideways.vim'

"" Beter JSON
"Plugin 'elzr/vim-json'

" Yet Another JavaScript Syntax for Vim
Plugin 'othree/yajs.vim'

" Angular stuff
Plugin 'burnettk/vim-angular'

call vundle#end()
filetype plugin indent on

" ==================================
" ===     Configure behavior     ===
" ==================================

syntax on

set autoindent
set copyindent
set smartindent
set backup
set writebackup
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set incsearch
set hlsearch
set cursorline
set number
set encoding=utf8
set wildchar=<Tab>
set wildmenu
set wildmode=list:full
set ignorecase
set smartcase
set smarttab
set ff=unix
set scrolloff=4
set noshowcmd
set hidden
set ruler
set laststatus=2
set undofile
set modelines=0
set title
set dir=~/.vim/sessions//
set backupdir=~/.vim/backup//
set undodir=~/.vim/undo//
set wrap
set showmatch
set history=1000     " remember more commands and search history
set undolevels=1000  " use many muchos levels of undo
set noerrorbells     " Don't blink on error
set visualbell t_vb= " Don't beep on error
set relativenumber
set foldcolumn=1     " show an additional column for fold indicator

inoremap <C-]> <ESC> " leave insert mode using both square brakets

" Load and Save the configuration file
nnoremap <silent> <Leader>lv :e $MYVIMRC<CR>
nnoremap <silent> <Leader>sv :so $MYVIMRC<CR>

" Toggle folded text and clear search result highlight
nnoremap <silent> <space> :noh<CR>za

" Remove trailing whitespace on <leader>S
nnoremap <silent> <leader>S :%s/\s\+$//ge<cr>

" Delete white spaces on file save
autocmd BufWritePre * :%s/\s\+$//ge

" Easier moving to start/end line
nnoremap <leader>a ^
nnoremap <leader>e $
vnoremap <leader>a ^
vnoremap <leader>e $<Left>

" New line
inoremap <S-Enter> <Esc>o
inoremap <C-Enter> <Esc>O

" ==================================
" ===     Configure VIM JS       ===
" ==================================

let g:javascript_enable_domhtmlcss=1
let g:javascript_enable_domhtmlcss = 1
let g:javascript_ignore_javaScriptdoc = 1
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_ngdoc = 1

autocmd BufEnter *.js set tw=79 sw=3 ts=3 sta et fo=croql
autocmd BufEnter *.ts set tw=79 sw=3 ts=3 sta et fo=croql

let g:used_javascript_libs = 'angularjs,jquery,requirejs'

" ==================================
" ===             XML            ===
" ==================================

autocmd BufEnter *.xml set tw=79 sw=3 ts=3 sta et fo=croql
autocmd BufEnter *.html set tw=79 sw=3 ts=3 sta et fo=croql

" ==================================
" ===     Configure Jedi-VIM     ===
" ==================================

autocmd FileType python setlocal completeopt-=preview
autocmd BufEnter *.py set tw=79 sw=3 ts=3 sta et fo=croql
autocmd BufEnter *.sc set tw=79 sw=3 ts=3 sta et fo=croql
autocmd BufEnter *.sc setlocal filetype=python

" ==================================
" ===     Configure Tern JS      ===
" ==================================

autocmd BufEnter *.js nnoremap <Leader>dd :TernDef<CR>
autocmd BufEnter *.js nnoremap <Leader>dp :TernDefPreview<CR>
autocmd BufEnter *.js nnoremap <Leader>ds :TernDefSplit<CR>
autocmd BufEnter *.js nnoremap <Leader>dt :TernDefTab<CR>
autocmd BufEnter *.js nnoremap <Leader>kk :TernDoc<CR>
autocmd BufEnter *.js nnoremap <Leader>kb :TernDocBrowse<CR>
autocmd BufEnter *.js nnoremap <Leader>n :TernRefs<CR>
autocmd BufEnter *.js nnoremap <Leader>r :TernRename<CR>

" ==================================
" ===      Configure CSS         ===
" ==================================

autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS noci
autocmd BufNewFile,BufRead *.less set filetype=less
autocmd FileType less set omnifunc=csscomplete#CompleteCSS
autocmd BufEnter *.css set tw=79 sw=3 ts=3 sta et fo=croql
autocmd BufEnter *.scss set tw=79 sw=3 ts=3 sta et fo=croql

" ==================================
" ===     Configure Syntastic    ===
" ==================================

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_mode_map={ "mode": "passive" }
let g:sytastic_enable_highlighting=1
let g:syntastic_javascript_checkers = ['jshint']
nnoremap <leader>ll :SyntasticCheck<CR>
nnoremap <leader>ln :lnext<CR>
nnoremap <leader>lp :lprevious<CR>
nnoremap <leader>lr :SyntasticReset<CR>

" ==================================
" =  Configure AirLine status bar  =
" ==================================

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

" ==================================
" ===      Set color scheme      ===
" ==================================

colo lucius

" ==================================
" ===     Configure NERD tree    ===
" ==================================

nnoremap <silent> <Leader>0 :NERDTreeToggle<CR>
" Close VIM if the only window left is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" ==================================
" ===       Configure TagBar     ===
" ==================================

nnoremap <silent> <Leader>9 :TagbarToggle<CR>

" ==================================
" ======    Configure Butane   =====
" ==================================

nnoremap <leader>q :Bclose<CR>
nnoremap <leader>Q :Bclose!<CR>

" ==================================
" ===    Configure CtrlP find    ===
" ==================================

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 0

nnoremap <C-e> :CtrlPBuffer<CR>

" ==================================
" =    Configure JS Doc support    =
" ==================================

let g:jsdoc_allow_input_prompt          = 1
let g:jsdoc_input_description           = 1
let g:jsdoc_additional_descriptions     = 1
let g:jsdoc_return                      = 1
let g:jsdoc_return_type                 = 1
let g:jsdoc_return_description          = 1
let g:jsdoc_access_descriptions         = 1
let g:jsdoc_underscore_private          = 1
let g:jsdoc_allow_shorthand             = 0
let g:jsdoc_param_description_separator = ' '
let g:jsdoc_custom_args_hook            = {}
let g:jsdoc_custom_args_regex_only      = 0
let g:jsdoc_type_hook                   = {}
let g:jsdoc_enable_es6                  = 0

" ==================================
" = Configure clipboard management =
" ==================================

" Copy to clipboard
noremap <Leader>y "+y

" Paste from clipboard
noremap <Leader>p "+p
noremap <Leader>P "+P

vnoremap <Leader>p "+p
vnoremap <Leader>P "+P

inoremap <Leader>p <C-r>+
inoremap <Leader>P <C-r>+

" ==================================
" ===          Undotree          ===
" ==================================

nnoremap <F5> :UndotreeToggle<cr>

" ==================================
" ===     Configure behavior     ===
" ==================================

nnoremap <Leader>sl :SidewaysLeft<CR>
nnoremap <Leader>sr :SidewaysRight<CR>

" ==================================
" ===      Window navigation     ===
" ==================================

" Easy navigation between panes
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Don't use the arrow keys!!
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>

" Scrolling in Insert mode
inoremap <C-E> <C-X><C-E>
inoremap <C-Y> <C-X><C-Y>

" Command mode navigation

" start of line
cnoremap <C-a> <Home>
" end of line
cnoremap <C-e> <End>
" back one character
cnoremap <C-h> <Left>
" forward one character
cnoremap <C-l> <Right>
" delete character under cursor
cnoremap <C-d> <Del>
" recall newer command-line
cnoremap <C-n> <Down>
" recall previous (older) command-line
cnoremap <C-p> <Up>

" Navigate throug buffers
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>

" Move display lines instead of real lines
nnoremap k  gk
nnoremap gk k
nnoremap j  gj
nnoremap gj j

" Run ctags
nnoremap <silent> <leader>rc :!ctags -R .<CR>

nnoremap ; :
